{"version":3,"sources":["images/logoMain.svg","images/logo.svg","images/collage.png","pages/Home.js","pages/Manual.js","pages/Aperture.js","pages/Footer.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","src","logo","alt","data-src","title","xmlns","width","height","viewBox","id","data-name","transform","x2","y2","x1","Manual","Aperture","image","Footer","style","fontSize","href","target","Boolean","window","location","hostname","match","ReactDOM","render","licenseKey","scrollingSpeed","continuousVertical","navigation","parallax","state","fullpageApi","Wrapper","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4FAAAA,EAAOC,QAAU,IAA0B,sC,qCCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,oMCuD5BC,MAlDf,WACE,OACE,yBAAKC,UAAU,WACb,yBAAKA,UAAU,aACf,yBAAKC,IAAKC,IAAMF,UAAU,OAAOG,IAAI,KACnC,yBAAKC,WAAUC,IAAOL,UAAU,kCAAkCG,IAAI,KACtE,yBAAKH,UAAU,oBACb,6CACA,yBACEA,UAAU,2CACVM,MAAM,6BACNC,MAAM,SACNC,OAAO,SACPC,QAAQ,qBAER,uBACEC,GAAG,UACHC,YAAU,UACVC,UAAU,gCAEV,uBACEF,GAAG,UACHC,YAAU,UACVC,UAAU,+BAEV,0BACEF,GAAG,SACHC,YAAU,SACVX,UAAU,QACVa,GAAG,SACHC,GAAG,OACHF,UAAU,uBAEZ,0BACEF,GAAG,SACHC,YAAU,SACVX,UAAU,QACVe,GAAG,SACHD,GAAG,OACHF,UAAU,+BChBbI,MAzBf,WACE,OACE,yBAAKhB,UAAU,WACb,yBAAKA,UAAU,eACf,yBAAKI,WAAUF,IAAMF,UAAU,OAAOG,IAAI,KACxC,yBAAKH,UAAU,SAEf,yBAAKA,UAAU,QACb,wBAAIA,UAAU,mBAAd,eACA,0hB,gBCiBKiB,MAzBf,WACE,OACE,yBAAKjB,UAAU,WACb,yBAAKA,UAAU,iBACf,yBAAKC,IAAKC,IAAMF,UAAU,OAAOG,IAAI,KACnC,yBAAKH,UAAU,QACb,wBAAIA,UAAU,iBAAd,gCACA,klBAYF,yBAAKI,WAAUc,IAAOf,IAAI,QCTnBgB,MAZf,WACE,OACE,4BAAQnB,UAAU,WACd,yBAAKA,UAAU,eACX,0BAAMoB,MAAO,CAACC,SAAU,UAAxB,iBACA,0BAAMD,MAAO,CAACC,SAAU,UAAxB,WACA,uBAAGC,KAAK,yBAAyBC,OAAO,UAAxC,qBCIQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oBCgBNC,IAASC,OAAO,mBAtBC,kBACb,kBAAC,IAAD,CAEEC,WAAc,gBACdC,eAAkB,IAClBC,oBAAsB,EACtBC,YAAc,EACdC,UAAY,EAEZL,OAAQ,YAA4B,EAAzBM,MAAyB,EAAlBC,YAChB,OACE,kBAAC,IAAcC,QAAf,KACE,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,YAOI,MAAcC,SAASC,eAAe,SDiGhD,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.8e1593a1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logoMain.a8eaa908.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.576bf515.svg\";","module.exports = __webpack_public_path__ + \"static/media/collage.f57d02ad.png\";","import React from \"react\";\nimport \"../scss/animation.scss\";\nimport title from \"../images/logo.svg\";\nimport logo from \"../images/logoMain.svg\";\n\nfunction Home() {\n  return (\n    <div className=\"section\">\n      <div className=\"page home\">\n      <img src={logo} className=\"logo\" alt=\"\" />\n        <img data-src={title} className=\"home__heading animated zoomInUp\" alt=\"\" />\n        <div className=\"scroll-indicator\">\n          <span>scroll down</span>\n          <svg\n            className=\"animated slideOutDown infinite alternate\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            width=\"64.964\"\n            height=\"19.493\"\n            viewBox=\"0 0 64.964 19.493\"\n          >\n            <g\n              id=\"Group_1\"\n              data-name=\"Group 1\"\n              transform=\"translate(-423.95 -1020.477)\"\n            >\n              <g\n                id=\"Group_2\"\n                data-name=\"Group 2\"\n                transform=\"translate(424.838 1022.269)\"\n              >\n                <line\n                  id=\"Line_1\"\n                  data-name=\"Line 1\"\n                  className=\"cls-1\"\n                  x2=\"32.101\"\n                  y2=\"15.9\"\n                  transform=\"translate(0 0.008)\"\n                />\n                <line\n                  id=\"Line_2\"\n                  data-name=\"Line 2\"\n                  className=\"cls-1\"\n                  x1=\"32.101\"\n                  y2=\"15.9\"\n                  transform=\"translate(31.088 0)\"\n                />\n              </g>\n            </g>\n          </svg>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","import React from \"react\";\nimport logo from \"../images/logoMain.svg\";\n\nfunction Manual() {\n  return (\n    <div className=\"section\">\n      <div className=\"page manual\">\n      <img data-src={logo} className=\"logo\" alt=\"\" />\n        <div className=\"text\">\n        </div>\n        <div className=\"text\">\n          <h2 className=\"manual__heading\">Manual mode</h2>\n          <p>\n            Contrary to the automatic mode, the manual mode offers you complete\n            control over all camera settings. This of course is much more of a\n            challenge and will require you to understand, what the settings do\n            in order to choose the right ones for the task. It used to require a\n            high level of experience or a considerable amount of calculating to\n            figure out all the settings for the right exposure. This is\n            currently becoming much less demanding as a new technology has\n            gained popularity: The mirrorless camera.\n          </p>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Manual;\n","import React from \"react\";\nimport image from '../images/collage.png';\nimport logo from \"../images/logoMain.svg\";\n\nfunction Aperture() {\n  return (\n    <div className=\"section\">\n      <div className=\"page aperture\">\n      <img src={logo} className=\"logo\" alt=\"\" />\n        <div className=\"text\">\n          <h2 className=\"text__heading\">Aperture or shutter priority</h2>\n          <p>\n            In the two priority modes you gain control over either the aperture or\n            the shutter speed and the camera will automatically choose the other.\n            This means that in one mode you can decide the shutter speed to fit if\n            your motive is still or fast moving or perhaps if you wish to add\n            motion blur to your image while in the other mode you can adjust the\n            aperture thus controlling the depth of field (bokeh) and let the\n            camera decide on the shutter speed.Â  These modes are great for fast\n            photography, where you still want to retain control over one essential\n            setting.\n          </p>\n        </div>\n        <img data-src={image} alt=\"\"/>\n      </div>\n    </div>\n  );\n}\n\nexport default Aperture;\n","import React from \"react\";\n\nfunction Footer() {\n  return (\n    <footer className=\"section\">\n        <div className=\"page footer\">\n            <span style={{fontSize: '117px'}}>Grab a camera</span>\n            <span style={{fontSize: '220px'}}>and go!</span>\n            <a href=\"https://adamgiebl.best\" target=\"_blank\">adamgiebl.best</a>\n        </div>\n    </footer>\n  );\n}\n\nexport default Footer;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './scss/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport ReactFullpage from '@fullpage/react-fullpage';\nimport './scss/App.scss';\nimport Home from './pages/Home';\nimport Manual from './pages/Manual';\nimport Aperture from './pages/Aperture';\nimport Footer from './pages/Footer';\n\nconst Fullpage = () => (\n    <ReactFullpage\n      //fullpage options\n      licenseKey = {'YOUR_KEY_HERE'}\n      scrollingSpeed = {800} /* Options here */\n      continuousVertical = {true}\n      navigation = {true}\n      parallax = {true}\n  \n      render={({ state, fullpageApi }) => {\n        return (\n          <ReactFullpage.Wrapper>\n            <Home />\n            <Manual />\n            <Aperture />\n            <Footer />\n          </ReactFullpage.Wrapper>\n        );\n      }}\n    />\n  );\n\nReactDOM.render(<Fullpage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}